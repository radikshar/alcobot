
var bot = require('./index').bot;
var SQL = require('./index').con;

const buttonmenu = {
    parse_mode: "Markdown",
    reply_markup: {
        keyboard: [["ü•É –ú–µ–Ω—é", "üõç –ö–æ—Ä–∑–∏–Ω–∞", "‚ùì –ü–æ–º–æ—â—å"]],
        resize_keyboard: true,
        one_time_keyboard: true,
    },
};



//—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
bot.onText(/\–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è/, async function (msg) {
	var userId = msg.from.id;

	var select_user = await SQL("SELECT * FROM user WHERE user_id = ?",[userId]);

	select_user = select_user[0];


	if (typeof select_user == 'undefined') {


		bot.sendMessage(userId, '–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∏–º—è');
		register(userId);
	}
	else if (select_user.age == false) {
		bot.sendMessage(userId,'–í–∞–º –Ω–µ–ª—å–∑—è –ø–æ–∫—É–ø–∞—Ç—å –∞–ª–∫–æ–≥–æ–ª—å!');
	}   else {
		bot.sendMessage(userId,'–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!');
	}     

});

var saveuser = [];


//–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –∫–Ω–æ–ø–æ–∫
var countaccept = 0;
var countdec = 10000;

//–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
function register(userId) {

	var telegram_id = userId;
	var firstname = '';
	var surname = '';
	var middlename = '';
	var phone = '';
	var strname;
	var regex = /[.*%&!@#‚Ññ+?^${}()|[\]\\,0-9]/g;
	var found = '';


	bot.on('message', async function (msg) {


        //–ø—Ä–æ–≤–µ–∫–∞ —á—Ç–æ –∏–º–µ–Ω–Ω–æ —ç—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫ –ø–∏—à–µ—Ç
        if (msg.from.id == telegram_id) {


            //–î–æ–±–∞–≤–ª—è–µ—Ç –∏–º—è
            if (firstname === '') {

                //–ø—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É
                if (msg.text === '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è üóí') {
                	msg.text = '';
                	return;
                }

                let serchcommand = msg.text.indexOf('/');

                //–ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –∫–æ–º–∞–Ω–¥—É –¥–ª—è –∏–º–µ–Ω–∏
                if (serchcommand>=0) {
                	msg.text = '';
                	bot.sendMessage(userId,'–í—ã –≤–≤–µ–ª–∏ –∫–æ–º–º–∞–Ω–¥—É!–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∏–º—è!');
                	return;
                }

                firstname = msg.text;


                found = firstname.match(regex);

                if (found !=null) {
                	firstname = '';

                	await bot.sendMessage(userId, '–í–≤–µ–¥–∏—Ç–µ –µ—â–µ —Ä–∞–∑ –ò–º—è');

                	return;

                }


                //–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ–Ω–∏ –Ω–∞ –¥–ª–∏–Ω—É
                if (firstname.length === 1) {
                	firstname = '';

                	await bot.sendMessage(userId, '–í–≤–µ–¥–∏—Ç–µ –µ—â–µ —Ä–∞–∑ –ò–º—è');

                	return;
                }

                await bot.sendMessage(userId, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ ' + firstname + ', —Ç–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä');

                return;

            }

            //–î–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ–ª–µ—Ñ–æ–Ω
            if (phone === '') {


                //–ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É
                if (msg.text == '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è üóí') {
                	phone = '';
                	msg.text = '';
                	return;
                }


                if (msg.text!= null) {
                	phone = msg.text;
                }

                


                //–ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ –≤ –Ω–æ–º–µ—Ä–µ –ø—Ä–∏—Å—É–≤—Å—Ç–≤—É—é—Ç —Å–∏–º–≤–æ–ª—ã
                if (isNaN(phone)) {
                	phone = '';
                	await bot.sendMessage(userId, '–í—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ç–µ–ª–µ—Ñ–æ–Ω, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ');
                	return;
                }


                //–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã –Ω–æ–º–µ—Ä–∞ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
                if (phone.length <= 10) {
                	phone = '';
                	await bot.sendMessage(userId, '–í—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ç–µ–ª–µ—Ñ–æ–Ω, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ');
                	return;
                }

                saveuser.push({
                	name: firstname,
                	phone: phone,
                	countacc:countaccept,
                	countdec: countdec,
                	userid: telegram_id,
                	status:false
                });

                await bot.sendMessage(telegram_id, "–ü–æ—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤–∞–º –µ—Å—Ç—å 21 –≥–æ–¥", {
                	reply_markup: JSON.stringify({
                		inline_keyboard: [
                		[{text: '‚úÖ –ü–æ—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data: countaccept }, {text: '‚ùå –ú–µ–Ω—å—à–µ 21 –≥–æ–¥–∞', callback_data: countdec }],
                		]
                	})
                });


                countaccept++;
                countdec++;

            }

        }

    });
}


//–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —é–∑–µ—Ä–æ–≤
async function regsiteruser(userId,buttonstatus){

 for (var i = 0; i < saveuser.length; i++) {
     if (saveuser[i].status == true && saveuser[i].userid == userId) {
      bot.sendMessage(userId, '–í—ã —É–∂–µ –ø–æ—Ç–≤–µ—Ä–¥–∏–ª–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç!');
      return;
  }
}


for (var i = 0; i<saveuser.length; i++) {


    if (buttonstatus == saveuser[i].countdec) {

     saveuser[i].status = true;


     var insert_user = await SQL("INSERT INTO user (name,phone,age,user_id) VALUES (?,?,?,?)",[saveuser[i].name,saveuser[i].phone,false,saveuser[i].userid]);

     await bot.sendMessage(saveuser[i].userid,'–í–∞–º –Ω–µ—Ç 21 –≥–æ–¥–∞');

 }

 else if (buttonstatus == saveuser[i].countacc) {

     saveuser[i].status = true;

     var insert_user = await SQL("INSERT INTO user (name,phone,age,user_id) VALUES (?,?,?,?)",[saveuser[i].name,saveuser[i].phone,true,saveuser[i].userid]);

     await bot.sendMessage(saveuser[i].userid,'–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä –≤ –º–µ–Ω—é',buttonmenu);


 }
}


}


var saveorder = require('./menu').saveorder;
var basket = require('./basket');



//–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –Ω–∞–∂–∞—Ç–∏—è
bot.on('callback_query', async function (msg) {

    var userId = msg.from.id;

    var buttonstatus = msg.data;

    // console.log(msg);

    var chatId = msg.message.chat.id;
    var messageId = msg.message.message_id;

    if (msg.message.text == '–ü–æ—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤–∞–º –µ—Å—Ç—å 21 –≥–æ–¥') {


        regsiteruser(userId, buttonstatus);
        return;

    } 


    if (buttonstatus == 'basket') {
        basket(userId);
        return;
    }

    for(var i = 0; i < saveorder.length; i++){


        if (saveorder[i].count == buttonstatus && saveorder[i].userid == userId) {


            saveorder[i].amount++; 

            saveorder[i].status = true;

            saveorder[i].sum = Number(saveorder[i].price) + Number(saveorder[i].sum);

            var select_basket = await SQL ("SELECT * FROM basket WHERE telegram_id = ? AND name = ?",[userId,saveorder[i].name]);

            select_basket = select_basket[0];


            if (typeof select_basket == 'undefined') {
                var insert_base = await SQL("INSERT INTO basket (name,photo,price,sum,amount,telegram_id) VALUES (?,?,?,?,?,?)",
                [saveorder[i].name,saveorder[i].photo,saveorder[i].price,saveorder[i].sum,saveorder[i].amount,saveorder[i].userid]);
            } else {
                var update_basket = await SQL("UPDATE basket SET amount = ?,sum = ?  WHERE telegram_id = ? AND name = ?",
                    [saveorder[i].amount,saveorder[i].sum,select_basket.telegram_id,select_basket.name]);
            }

             

            var  replyMarkup2 = JSON.stringify({
              inline_keyboard: [
              [{text: 'üóë–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É('+saveorder[i].amount+' —à—Ç.)', callback_data: saveorder[i].count }],
              [{text: 'üóë–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É', callback_data: 'basket'}],
              ]
          })


            bot.editMessageReplyMarkup(replyMarkup2, {message_id: messageId, chat_id: chatId});

        }

    }


});


